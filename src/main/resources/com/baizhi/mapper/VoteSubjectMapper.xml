<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.baizhi.dao.VoteSubjectDao">
    <!-- VoteSubject的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_VoteSubject_Map" type="com.baizhi.entity.VoteSubject">
        <id column="sid" property="vsId"/>
        <result column="stitle" property="vsTitle"/>
        <result column="stype" property="vsType"/>
        <collection property="voteOptions" ofType="VoteOption">
            <id column="oid" property="voId"></id>
            <result property="voOption" column="ooption"></result>
        </collection>
    </resultMap>

    <!-- 数据库中表名为:vote_subject的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="vote_subject_Column">
        vote_subject.vs_id as vs_id
        ,vote_subject.vs_title as vs_title
        ,vote_subject.vs_type as vs_type
    </sql>

    <!--获得类名为:VoteSubject对应的数据库表的数据总行数 -->
    <select id="getVoteSubjectRowCount" resultType="java.lang.Long">
        select count(vs_id) from vote_subject
    </select>
    <!--&lt;!&ndash; 获得类名为:VoteSubject对应数据库中表的数据集合 &ndash;&gt;
    <select id="selectVoteSubject" resultMap="result_VoteSubject_Map">
        select
        <include refid="vote_subject_Column"/>
        from vote_subject
    </select>

    &lt;!&ndash; 获得一个VoteSubject对象,以参数VoteSubject对象中不为空的属性作为条件进行查询&ndash;&gt;
    <select id="selectVoteSubjectByObj" parameterType="com.baizhi.entity.VoteSubject"
            resultMap="result_VoteSubject_Map">
        select
        <include refid="vote_subject_Column"/>
        from vote_subject
        <where>
            <if test="vsType != null ">and vote_subject.vs_type = #{vsType}</if>
            <if test="vsTitle != null ">and vote_subject.vs_title = #{vsTitle}</if>
            <if test="vsId != null ">and vote_subject.vs_id = #{vsId}</if>
        </where>
    </select>

    &lt;!&ndash; 通过VoteSubject的id获得对应数据库中表的数据对象&ndash;&gt;
    <select id="selectVoteSubjectById" parameterType="java.lang.Integer" resultMap="result_VoteSubject_Map">
        select
        <include refid="vote_subject_Column"/>
        from vote_subject
        where vote_subject.vs_id = #{id}
    </select>-->

    <!-- 将VoteSubject插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertVoteSubject" parameterType="com.baizhi.entity.VoteSubject">
        insert into vote_subject(vs_id,vs_title,vs_type) 
        values(#{vsId},#{vsTitle},#{vsType})
    </insert>

    <!-- 将VoteSubject中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyVoteSubject" parameterType="com.baizhi.entity.VoteSubject">
        insert into vote_subject
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="vsId != null">vs_id,</if>
            <if test="vsTitle != null">vs_title,</if>
            <if test="vsType != null">vs_type,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="vsId != null">#{vsId},</if>
            <if test="vsTitle != null">#{vsTitle},</if>
            <if test="vsType != null">#{vsType},</if>
        </trim>
    </insert>
    <insert id="insertSub" parameterType="VoteSubject">
        insert into vote_subject values (0,#{vsTitle},#{vsType})
        <selectKey order="AFTER" resultType="java.lang.Integer" keyProperty="vsId">
            SELECT LAST_INSERT_ID() AS vsId
        </selectKey>
    </insert>
    <!-- 通过VoteSubject的id将数据库表中对应的数据删除-->
    <delete id="deleteVoteSubjectById" parameterType="java.lang.Integer">
        delete from vote_subject
        where vs_id = #{id}
    </delete>

    <!-- 通过VoteSubject的id将VoteSubject的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateVoteSubjectById" parameterType="com.baizhi.entity.VoteSubject">
        update vote_subject set
            vs_title=#{vsTitle}
            ,vs_type=#{vsType}
        where vs_id=#{vsId}
    </update>

    <!-- 通过VoteSubject的id将VoteSubject中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyVoteSubjectById" parameterType="com.baizhi.entity.VoteSubject">
        update vote_subject
        <set>
            <if test="vsTitle != null">
                vs_title=#{vsTitle},
            </if>
            <if test="vsType != null">
                vs_type=#{vsType},
            </if>
        </set>
        where vs_id=#{vsId}
    </update>

    <select id="selectById" parameterType="java.lang.Integer" resultMap="result_VoteSubject_Map">
        SELECT
            s.vs_id sid,
            s.vs_title stitle,
            s.vs_type stype,
            o.vo_id oid,
            o.vo_option ooption
        FROM
            vote_subject s
        LEFT JOIN vote_option o ON s.vs_id = o.vs_id
        WHERE
            s.vs_id = #{id}
    </select>
</mapper>